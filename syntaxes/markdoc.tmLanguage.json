{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Markdoc",
  "scopeName": "text.html.markdoc",
  "patterns": [{ "include": "#markdoc" }, { "include": "text.html.markdown" }],
  "repository": {
    "markdoc": {
      "begin": "(\\{%)\\s*(\\/?[a-zA-Z][\\w-]*\\b)?\\s*",
      "end": "\\s*\\/?\\s*%\\}",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.markdoc" },
        "2": { "name": "entity.name.tag.markdoc" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.tag.end.markdoc" }
      },
      "patterns": [
        { "include": "#primitives" },
        { "include": "#function" },
        { "include": "#compound" },
        { "include": "#variable" },
        { "include": "#attribute-name" }
      ]
    },
    "punctuation-comma": {
      "name": "punctuation.separator.comma.markdoc",
      "match": ","
    },
    "attribute-name": {
      "match": "(\\b[a-zA-Z][\\w-]*)(\\=)",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.markdoc"
        },
        "2": {
          "name": "punctuation.separator.key-value.markdoc"
        }
      }
    },
    "shorthand-class": {
      "match": "(#)((?:[a-zA-Z][\\w-]*)\\b)",
      "captures": {
        "1": { "name": "punctuation.definition.entity.markdoc" },
        "2": { "name": "entity.other.attribute-name.id.markdoc" }
      }
    },
    "shorthand-id": {
      "match": "(\\.)((?:[a-zA-Z][\\w-]*)\\b)",
      "captures": {
        "1": { "name": "punctuation.definition.entity.markdoc" },
        "2": { "name": "entity.other.attribute-name.class.markdoc" }
      }
    },
    "string": {
      "match": "\".*?\"",
      "name": "string.quoted.markdoc"
    },
    "number": {
      "match": "\\b\\d+\\.?\\d*\\b",
      "name": "constant.language.numeric.markdoc"
    },
    "boolean": {
      "match": "false|true",
      "name": "constant.language.boolean.markdoc"
    },
    "null": {
      "match": "null",
      "name": "constant.language.null.markdoc"
    },
    "primitives": {
      "patterns": [
        { "include": "#string" },
        { "include": "#number" },
        { "include": "#boolean" }
      ]
    },
    "compound": {
      "patterns": [{ "include": "#array" }, { "include": "#object" }]
    },
    "function": {
      "match": "\\b[a-zA-Z][\\w-]*(?=\\()",
      "name": "entity.name.function.markdoc"
    },
    "array": {
      "name": "meta.array.markdoc",
      "begin": "\\[",
      "end": "\\]",
      "captures": {
        "0": {
          "name": "meta.brace.square.markdoc"
        }
      },
      "patterns": [
        { "include": "#primitives" },
        { "include": "#punctuation-comma" },
        { "include": "#variable" },
        { "include": "#function" },
        { "include": "#compound" }
      ]
    },
    "object": {
      "name": "meta.object.markdoc",
      "begin": "\\{",
      "end": "\\}",
      "captures": {
        "0": {
          "name": "meta.brace.curly.markdoc"
        }
      },
      "patterns": [
        {
          "match": "(?:[a-zA-Z][\\w-]*|\".*?\")\\s*(?=\\s*:)",
          "captures": {
            "0": {
              "name": "meta.object-literal.key.markdoc"
            }
          }
        },
        {
          "begin": ":",
          "end": "(?=,|\\})",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.key-value.markdoc"
            }
          },
          "patterns": [
            { "include": "#primitives" },
            { "include": "#variable" },
            { "include": "#function" },
            { "include": "#compound" }
          ]
        },
        { "include": "#punctuation-comma" }
      ]
    },
    "variable": {
      "match": "(?<variable>(\\$)([a-zA-Z][\\w-]*)((?:\\.[a-zA-Z][\\w-]*|\\[(?:\\d+|\".*?\"|\\g'variable')\\])*))",
      "name": "variable.markdoc",
      "captures": {
        "2": { "name": "variable.sigil.markdoc" },
        "3": { "name": "variable.markdoc" },
        "4": {
          "patterns": [
            {
              "match": "(\\.)([a-zA-Z][\\w-]*)\\b",
              "captures": {
                "1": { "name": "punctuation.accessor.markdoc" },
                "2": { "name": "variable.other.property" }
              }
            },
            {
              "begin": "\\[",
              "end": "\\]",
              "patterns": [
                { "match": "\\d+", "name": "constant.numeric" },
                { "include": "#string" },
                { "include": "#variable" }
              ]
            }
          ]
        }
      }
    }
  }
}
